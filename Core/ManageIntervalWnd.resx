<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_stateIcon.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAd
        hwAAHYcBj+XxZQAABExJREFUWEfdlmtMU2cYx3taKBRKuawoVEtFaBmDgsUBmjmVq5ow3JyyEa8Ios5o
        tmUujk2jiVvmLbqL8cPMNJqoczDHUOdtm5dvy2JM9INRt+hnEzUaL1Fznv3/rzSyegotDrLsn/zS9vQ9
        z/Oc97m8x/R/kwUkd38OqmLBRPAN+B1MB4MmO1gDbgDp5ihIAAMuPvmn4BG4CfaCRaAGWMGAawq4Da6A
        esCABk10tg/cAVN5YbCVA66CTpDICwMpDaSDWtAGdoLTgLm/BrrANsD8B4AN/GvyADo9G2vR7g21W8Wf
        aZcJOSkyKS9NanxpMsbjkJwXbJIUZ9ER6XWs/REwLc8VCHPcCM474mP0Km+qrKoZIbsaX5Kf5hfJkQWj
        5GjrEw63FEv7XL98/YZPWspd4ktPEItZu4t7dwMviFqMfKVZ0+6UuR2yqT5XDi8olhOLAnJ84VPHPTkG
        ji/k/wHZP6dQWse4xJkYy5nwByin0UjFMdoWY9YeTPOnSwee7ASMGjkNxzEEyUA3vpYr2WnxDOIc8NN4
        JKpHHm/WFzilq7lIGTNyEgkM/IvXveJyWBkEu4XnRK9ygjOFGYny3ezCXreb6QgSbh1hSpZXZInVYn4I
        2y3KSy+aabVoD1ei2GjYyCCdMy1c81GVR1YAFp/RWsL1LNryLAd34QxIUZ4MFAP25Q1JUA54o6FBPO2e
        mQVS5rPpn68z6Q0zNH3ZOLfOJzVaT/gwKyo97AxOzQrlzUAucPFNFF5feeeWL69060uXmqSpzq7vnxU+
        YML1O9/Ol3S76ooPlTcDlYAbH0zMkt8Wl/wjx6H8AjqbimRyfpq+dspI+XWx8bogXM+CLkBtwcd25c1A
        Fej7ezOKh6j8flz9hLbuz1A+Ae+Od6utDV5rq3r6f+h9XJfrtDGADsB0P6NKBtCAAGoxYvlJJxy5s0Zn
        qKAYXDUmonKA4nt1ZIrMK81U65aNGy6l7iThDrI4x45IlmZMRTpmAXIweZ0JDOAAMAygVNNMt2iYbbOh
        LldOvlMiS14Zpqr8FL6vx7X3J7jVlnNbZyOwr/AfU8ZRzN+HMJbZ/83lmfLtW/kq/wxye8OLUoQzBH52
        AB5uzygL/NkYGCoHmvyqdVhYNKwGEr534lrHPL8qLP6e83KGfIkA2AE/Y1RzBAfPiO/x/WBzsfrePrdQ
        diCYjCQ1kFYpbwaKB4cCw+zSRefdnRBa3T1/0+gPCCh4rWf39FzH3VozKVtwmj6AjzrlLYzes8dZZPNU
        b0Tznw5DAzSCu8KjG/YvALZ7WPnAX5OxmEeskbFoYXpYJ6m2GAawVnnpQ6sTrRZ9dW121KdgKNwh1s14
        dAvsXgJ5ykMfygSnPanxsnVannoPYGX3BxYvOwBH+33YbFXWI9RYcHl4cpyUoYf5UhI1uG+Uyy62WPNj
        2NoCon49qwbtgC+c/eUg+Aykgn6JE4vvhs+DGfxXZTL9DdUCmvDLg6rJAAAAAElFTkSuQmCC
</value>
  </data>
</root>